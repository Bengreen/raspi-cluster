---
- name: Set targetDir
  set_fact:
    targetDir: /initrd
    imageName: DietPi_RPi-ARMv6-Buster.7z

- name: install initrd build packages
  apt:
    name: "{{ packages }}"
    state: present
    # update_cache: yes
  vars:
    packages:
    - cpio
    - fakeroot
    - busybox-static
    - p7zip

- name: initrd files dir
  file:
    path: "{{ targetDir }}"
    state: directory
    mode: '0755'

# - name: Copy busybox
#   copy:
#     src: /usr/bin/busybox
#     dst: "{{ targetDir }}/bin"

# - name: Run initrd build script
#   shell: |
#       mkdir sbin
      
#       pwd
#       touch /tmp/monkey
#   args:
#     chdir: "{{ targetDir }}"
#     executable: /bin/bash

- name: Initrd initial filesystem
  file:
    path: "{{ targetDir }}/rootfs"
    state: directory
    mode: '0755'

- name: init
  template:
    src: init.j2
    dest: "{{ targetDir }}/rootfs/init"
    owner: root
    group: root
    mode: 0755


- name: downloader
  template:
    src: download.j2
    dest: "{{ targetDir }}/rootfs/download.sh"
    owner: root
    group: root
    mode: 0755

- name: download os image
  get_url:
    url: "https://dietpi.com/downloads/images/{{ imageName }}"
    dest: "/tftpboot/{{ imageName }}"

- name: copy network from host
  copy:
    src: /etc/network
    dest: "{{ targetDir }}/rootfs/altetc/"

- name: Copy etc files
  copy:
    src: etc
    dest: "{{ targetDir }}/rootfs/"

- name: fakeroot cpio build
  command: /usr/bin/fakeroot
  args:
    creates: "{{ targetDir }}/initramfs.igz"
    chdir: "{{ targetDir }}"
    stdin: |
        pushd rootfs
        mkdir -p dev bin sbin etc proc sys usr/bin usr/sbin var/run var/lib/dhcp usr/lib/arm-linux-gnueabihf lib/arm-linux-gnueabihf
        cp /bin/busybox bin/
   
        chmod +x etc/network/if-down.d/* etc/network/if-up.d/* etc/network/if-pre-up.d/* etc/network/if-post-down.d/* 
        chmod +x etc/udhcpc/default.script

        # Network dependencies
        cp /sbin/ethtool sbin/
        cp /usr/lib/arm-linux-gnueabihf/libarmmem-v7l.so usr/lib/arm-linux-gnueabihf/
        cp /lib/arm-linux-gnueabihf/libm.so.6 usr/lib/arm-linux-gnueabihf/
        cp /lib/arm-linux-gnueabihf/libc.so.6 usr/lib/arm-linux-gnueabihf/
        cp /lib/ld-linux-armhf.so.3 lib/

        cp /sbin/resolvconf sbin/
        cp /etc/resolvconf/ etc/


        cp /usr/bin/p7zip usr/bin/
        cp /usr/bin/7zr usr/bin/
        mkdir -p usr/lib/p7zip
        cp /usr/lib/p7zip/7zr usr/lib/p7zip/
        cp /lib/arm-linux-gnueabihf/libpthread.so.0 lib/arm-linux-gnueabihf/
        cp /usr/lib/arm-linux-gnueabihf/libstdc++.so.6 usr/lib/arm-linux-gnueabihf/
        cp /lib/arm-linux-gnueabihf/libgcc_s.so.1 usr/lib/arm-linux-gnueabihf/
        


        # mknod dev/console c 5 1
        # mknod dev/null c 1 3
        # mknod dev/tty c 5 0
        # mknod dev/ram0 b 1 0

        find . | cpio -H newc -o | gzip > ../initramfs.igz
        exit

- name: copy ramdisk to tftpboot
  copy:
    src: "{{ targetDir }}/initramfs.igz"
    dest: /tftpboot/initramfs.igz
    remote_src: yes

- name: config.txt
  template:
    src: config.j2
    dest: /tftpboot/config.txt
    owner: root
    group: root
    mode: 0644

- name: cmdline_net
  template:
    src: cmdline_net.j2
    dest: /tftpboot/cmdline_net.txt
    owner: root
    group: root
    mode: 0644
